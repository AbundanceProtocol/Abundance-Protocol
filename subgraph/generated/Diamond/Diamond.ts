// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CategoryCreated extends ethereum.Event {
  get params(): CategoryCreated__Params {
    return new CategoryCreated__Params(this);
  }
}

export class CategoryCreated__Params {
  _event: CategoryCreated;

  constructor(event: CategoryCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get hash(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class InitReviewCreated extends ethereum.Event {
  get params(): InitReviewCreated__Params {
    return new InitReviewCreated__Params(this);
  }
}

export class InitReviewCreated__Params {
  _event: InitReviewCreated;

  constructor(event: InitReviewCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get postHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get revHash(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PostCreated extends ethereum.Event {
  get params(): PostCreated__Params {
    return new PostCreated__Params(this);
  }
}

export class PostCreated__Params {
  _event: PostCreated;

  constructor(event: PostCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get hash(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class BidsAccepted extends ethereum.Event {
  get params(): BidsAccepted__Params {
    return new BidsAccepted__Params(this);
  }
}

export class BidsAccepted__Params {
  _event: BidsAccepted;

  constructor(event: BidsAccepted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reqId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get funders(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class FundingBidPosted extends ethereum.Event {
  get params(): FundingBidPosted__Params {
    return new FundingBidPosted__Params(this);
  }
}

export class FundingBidPosted__Params {
  _event: FundingBidPosted;

  constructor(event: FundingBidPosted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get funder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get percent(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FundingRequested extends ethereum.Event {
  get params(): FundingRequested__Params {
    return new FundingRequested__Params(this);
  }
}

export class FundingRequested__Params {
  _event: FundingRequested;

  constructor(event: FundingRequested) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get percent(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reqType(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class DiamondCut1 extends ethereum.Event {
  get params(): DiamondCut1__Params {
    return new DiamondCut1__Params(this);
  }
}

export class DiamondCut1__Params {
  _event: DiamondCut1;

  constructor(event: DiamondCut1) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut1_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut1_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut1_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class OwnershipTransferred1 extends ethereum.Event {
  get params(): OwnershipTransferred1__Params {
    return new OwnershipTransferred1__Params(this);
  }
}

export class OwnershipTransferred1__Params {
  _event: OwnershipTransferred1;

  constructor(event: OwnershipTransferred1) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Approval1 extends ethereum.Event {
  get params(): Approval1__Params {
    return new Approval1__Params(this);
  }
}

export class Approval1__Params {
  _event: Approval1;

  constructor(event: Approval1) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Transfer1 extends ethereum.Event {
  get params(): Transfer1__Params {
    return new Transfer1__Params(this);
  }
}

export class Transfer1__Params {
  _event: Transfer1;

  constructor(event: Transfer1) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Diamond__fetchCategoriesResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get catId(): string {
    return this[2].toString();
  }

  get catVotes(): BigInt {
    return this[3].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[4].toBigInt();
  }

  get blockTime(): BigInt {
    return this[5].toBigInt();
  }

  get tempRelatedCat(): Array<string> {
    return this[6].toStringArray();
  }

  get subscribers(): Array<Address> {
    return this[7].toAddressArray();
  }

  get parentCat(): Array<Diamond__fetchCategoriesResultValue0ParentCatStruct> {
    return this[8].toTupleArray<
      Diamond__fetchCategoriesResultValue0ParentCatStruct
    >();
  }

  get totalPostValue(): BigInt {
    return this[9].toBigInt();
  }
}

export class Diamond__fetchCategoriesResultValue0ParentCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get user(): Address {
    return this[1].toAddress();
  }

  get userWeight(): BigInt {
    return this[2].toBigInt();
  }

  get userVote(): BigInt {
    return this[3].toBigInt();
  }
}

export class Diamond__fetchCategoryResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get catId(): string {
    return this[2].toString();
  }

  get catVotes(): BigInt {
    return this[3].toBigInt();
  }

  get timeCreated(): BigInt {
    return this[4].toBigInt();
  }

  get blockTime(): BigInt {
    return this[5].toBigInt();
  }

  get tempRelatedCat(): Array<string> {
    return this[6].toStringArray();
  }

  get subscribers(): Array<Address> {
    return this[7].toAddressArray();
  }

  get parentCat(): Array<Diamond__fetchCategoryResultValue0ParentCatStruct> {
    return this[8].toTupleArray<
      Diamond__fetchCategoryResultValue0ParentCatStruct
    >();
  }

  get totalPostValue(): BigInt {
    return this[9].toBigInt();
  }
}

export class Diamond__fetchCategoryResultValue0ParentCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get user(): Address {
    return this[1].toAddress();
  }

  get userWeight(): BigInt {
    return this[2].toBigInt();
  }

  get userVote(): BigInt {
    return this[3].toBigInt();
  }
}

export class Diamond__facetsResultFacets_Struct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get functionSelectors(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class Diamond__fetchInitReviewResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get reviewHash(): string {
    return this[1].toString();
  }

  get validatorTotalWeight(): BigInt {
    return this[2].toBigInt();
  }

  get validatorCatWeight(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get urgency(): i32 {
    return this[5].toI32();
  }

  get funding(): boolean {
    return this[6].toBoolean();
  }

  get selfScore(): BigInt {
    return this[7].toBigInt();
  }

  get selfCrS(): BigInt {
    return this[8].toBigInt();
  }

  get selfIS(): BigInt {
    return this[9].toBigInt();
  }

  get postScore(): BigInt {
    return this[10].toBigInt();
  }

  get postCrS(): BigInt {
    return this[11].toBigInt();
  }

  get postIS(): BigInt {
    return this[12].toBigInt();
  }

  get reviewInfluence(): Array<
    Diamond__fetchInitReviewResultValue0ReviewInfluenceStruct
  > {
    return this[13].toTupleArray<
      Diamond__fetchInitReviewResultValue0ReviewInfluenceStruct
    >();
  }

  get reviewCat(): Array<Diamond__fetchInitReviewResultValue0ReviewCatStruct> {
    return this[14].toTupleArray<
      Diamond__fetchInitReviewResultValue0ReviewCatStruct
    >();
  }

  get reviewAuthor(): Array<
    Diamond__fetchInitReviewResultValue0ReviewAuthorStruct
  > {
    return this[15].toTupleArray<
      Diamond__fetchInitReviewResultValue0ReviewAuthorStruct
    >();
  }
}

export class Diamond__fetchInitReviewResultValue0ReviewInfluenceStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchInitReviewResultValue0ReviewCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchInitReviewResultValue0ReviewAuthorStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorWeight(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchInitReviewByPoatResultValue0Struct extends ethereum.Tuple {
  get validator(): Address {
    return this[0].toAddress();
  }

  get reviewHash(): string {
    return this[1].toString();
  }

  get validatorTotalWeight(): BigInt {
    return this[2].toBigInt();
  }

  get validatorCatWeight(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get urgency(): i32 {
    return this[5].toI32();
  }

  get funding(): boolean {
    return this[6].toBoolean();
  }

  get selfScore(): BigInt {
    return this[7].toBigInt();
  }

  get selfCrS(): BigInt {
    return this[8].toBigInt();
  }

  get selfIS(): BigInt {
    return this[9].toBigInt();
  }

  get postScore(): BigInt {
    return this[10].toBigInt();
  }

  get postCrS(): BigInt {
    return this[11].toBigInt();
  }

  get postIS(): BigInt {
    return this[12].toBigInt();
  }

  get reviewInfluence(): Array<
    Diamond__fetchInitReviewByPoatResultValue0ReviewInfluenceStruct
  > {
    return this[13].toTupleArray<
      Diamond__fetchInitReviewByPoatResultValue0ReviewInfluenceStruct
    >();
  }

  get reviewCat(): Array<
    Diamond__fetchInitReviewByPoatResultValue0ReviewCatStruct
  > {
    return this[14].toTupleArray<
      Diamond__fetchInitReviewByPoatResultValue0ReviewCatStruct
    >();
  }

  get reviewAuthor(): Array<
    Diamond__fetchInitReviewByPoatResultValue0ReviewAuthorStruct
  > {
    return this[15].toTupleArray<
      Diamond__fetchInitReviewByPoatResultValue0ReviewAuthorStruct
    >();
  }
}

export class Diamond__fetchInitReviewByPoatResultValue0ReviewInfluenceStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchInitReviewByPoatResultValue0ReviewCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchInitReviewByPoatResultValue0ReviewAuthorStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorWeight(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get title(): string {
    return this[1].toString();
  }

  get contentHash(): string {
    return this[2].toString();
  }

  get initReviewtHash(): string {
    return this[3].toString();
  }

  get postCat(): Array<Diamond__fetchPostResultValue0PostCatStruct> {
    return this[4].toTupleArray<Diamond__fetchPostResultValue0PostCatStruct>();
  }

  get postInf(): Array<Diamond__fetchPostResultValue0PostInfStruct> {
    return this[5].toTupleArray<Diamond__fetchPostResultValue0PostInfStruct>();
  }

  get postAuth(): Array<Diamond__fetchPostResultValue0PostAuthStruct> {
    return this[6].toTupleArray<Diamond__fetchPostResultValue0PostAuthStruct>();
  }

  get postReview(): Array<Diamond__fetchPostResultValue0PostReviewStruct> {
    return this[7].toTupleArray<
      Diamond__fetchPostResultValue0PostReviewStruct
    >();
  }

  get initialReview(): boolean {
    return this[8].toBoolean();
  }

  get challenged(): boolean {
    return this[9].toBoolean();
  }

  get reviewsList(): Array<Address> {
    return this[10].toAddressArray();
  }

  get reqExpertise(): BigInt {
    return this[11].toBigInt();
  }

  get lockExpiration(): BigInt {
    return this[12].toBigInt();
  }

  get CrS(): BigInt {
    return this[13].toBigInt();
  }

  get IS(): BigInt {
    return this[14].toBigInt();
  }

  get postValue(): BigInt {
    return this[15].toBigInt();
  }

  get timestamp(): BigInt {
    return this[16].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostInfStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostAuthStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorName(): string {
    return this[1].toString();
  }

  get authorWeight(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostReviewStruct extends ethereum.Tuple {
  get reviewer(): Address {
    return this[0].toAddress();
  }

  get reviewHash(): string {
    return this[1].toString();
  }

  get reviewerTotalWeight(): BigInt {
    return this[2].toBigInt();
  }

  get reviewerCatWeight(): BigInt {
    return this[3].toBigInt();
  }

  get accepted(): boolean {
    return this[4].toBoolean();
  }

  get expectedReviewPercent(): BigInt {
    return this[5].toBigInt();
  }

  get reviewInfluence(): Array<
    Diamond__fetchPostResultValue0PostReviewReviewInfluenceStruct
  > {
    return this[6].toTupleArray<
      Diamond__fetchPostResultValue0PostReviewReviewInfluenceStruct
    >();
  }

  get reviewCat(): Array<
    Diamond__fetchPostResultValue0PostReviewReviewCatStruct
  > {
    return this[7].toTupleArray<
      Diamond__fetchPostResultValue0PostReviewReviewCatStruct
    >();
  }

  get reviewAuthor(): Array<
    Diamond__fetchPostResultValue0PostReviewReviewAuthorStruct
  > {
    return this[8].toTupleArray<
      Diamond__fetchPostResultValue0PostReviewReviewAuthorStruct
    >();
  }
}

export class Diamond__fetchPostResultValue0PostReviewReviewInfluenceStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostReviewReviewCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostResultValue0PostReviewReviewAuthorStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorWeight(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get title(): string {
    return this[1].toString();
  }

  get contentHash(): string {
    return this[2].toString();
  }

  get initReviewtHash(): string {
    return this[3].toString();
  }

  get postCat(): Array<Diamond__fetchPostsResultValue0PostCatStruct> {
    return this[4].toTupleArray<Diamond__fetchPostsResultValue0PostCatStruct>();
  }

  get postInf(): Array<Diamond__fetchPostsResultValue0PostInfStruct> {
    return this[5].toTupleArray<Diamond__fetchPostsResultValue0PostInfStruct>();
  }

  get postAuth(): Array<Diamond__fetchPostsResultValue0PostAuthStruct> {
    return this[6].toTupleArray<
      Diamond__fetchPostsResultValue0PostAuthStruct
    >();
  }

  get postReview(): Array<Diamond__fetchPostsResultValue0PostReviewStruct> {
    return this[7].toTupleArray<
      Diamond__fetchPostsResultValue0PostReviewStruct
    >();
  }

  get initialReview(): boolean {
    return this[8].toBoolean();
  }

  get challenged(): boolean {
    return this[9].toBoolean();
  }

  get reviewsList(): Array<Address> {
    return this[10].toAddressArray();
  }

  get reqExpertise(): BigInt {
    return this[11].toBigInt();
  }

  get lockExpiration(): BigInt {
    return this[12].toBigInt();
  }

  get CrS(): BigInt {
    return this[13].toBigInt();
  }

  get IS(): BigInt {
    return this[14].toBigInt();
  }

  get postValue(): BigInt {
    return this[15].toBigInt();
  }

  get timestamp(): BigInt {
    return this[16].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostInfStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostAuthStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorName(): string {
    return this[1].toString();
  }

  get authorWeight(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostReviewStruct extends ethereum.Tuple {
  get reviewer(): Address {
    return this[0].toAddress();
  }

  get reviewHash(): string {
    return this[1].toString();
  }

  get reviewerTotalWeight(): BigInt {
    return this[2].toBigInt();
  }

  get reviewerCatWeight(): BigInt {
    return this[3].toBigInt();
  }

  get accepted(): boolean {
    return this[4].toBoolean();
  }

  get expectedReviewPercent(): BigInt {
    return this[5].toBigInt();
  }

  get reviewInfluence(): Array<
    Diamond__fetchPostsResultValue0PostReviewReviewInfluenceStruct
  > {
    return this[6].toTupleArray<
      Diamond__fetchPostsResultValue0PostReviewReviewInfluenceStruct
    >();
  }

  get reviewCat(): Array<
    Diamond__fetchPostsResultValue0PostReviewReviewCatStruct
  > {
    return this[7].toTupleArray<
      Diamond__fetchPostsResultValue0PostReviewReviewCatStruct
    >();
  }

  get reviewAuthor(): Array<
    Diamond__fetchPostsResultValue0PostReviewReviewAuthorStruct
  > {
    return this[8].toTupleArray<
      Diamond__fetchPostsResultValue0PostReviewReviewAuthorStruct
    >();
  }
}

export class Diamond__fetchPostsResultValue0PostReviewReviewInfluenceStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostReviewReviewCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__fetchPostsResultValue0PostReviewReviewAuthorStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorWeight(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__acceptBidsFraudProofInput_partialStruct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__calculateLowestBidsResultValue1Struct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class Diamond__calculateLowestBidsResult {
  value0: Array<Address>;
  value1: Diamond__calculateLowestBidsResultValue1Struct;

  constructor(
    value0: Array<Address>,
    value1: Diamond__calculateLowestBidsResultValue1Struct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getValue0(): Array<Address> {
    return this.value0;
  }

  getValue1(): Diamond__calculateLowestBidsResultValue1Struct {
    return this.value1;
  }
}

export class Diamond__findBidderResultValue0Struct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get bidId(): BigInt {
    return this[1].toBigInt();
  }

  get amountProvided(): BigInt {
    return this[2].toBigInt();
  }

  get returnRate(): BigInt {
    return this[3].toBigInt();
  }

  get accepted(): boolean {
    return this[4].toBoolean();
  }
}

export class Diamond__getAcceptedBidResultValue0Struct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get bidId(): BigInt {
    return this[1].toBigInt();
  }

  get amountProvided(): BigInt {
    return this[2].toBigInt();
  }

  get returnRate(): BigInt {
    return this[3].toBigInt();
  }

  get accepted(): boolean {
    return this[4].toBoolean();
  }
}

export class Diamond__getAllFundingReqsResultValue0Struct extends ethereum.Tuple {
  get reqId(): BigInt {
    return this[0].toBigInt();
  }

  get amountRequested(): BigInt {
    return this[1].toBigInt();
  }

  get returnRate(): BigInt {
    return this[2].toBigInt();
  }

  get reqType(): i32 {
    return this[3].toI32();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }
}

export class Diamond__getFundingReqResultValue0Struct extends ethereum.Tuple {
  get reqId(): BigInt {
    return this[0].toBigInt();
  }

  get amountRequested(): BigInt {
    return this[1].toBigInt();
  }

  get returnRate(): BigInt {
    return this[2].toBigInt();
  }

  get reqType(): i32 {
    return this[3].toI32();
  }

  get deadline(): BigInt {
    return this[4].toBigInt();
  }
}

export class Diamond extends ethereum.SmartContract {
  static bind(address: Address): Diamond {
    return new Diamond("Diamond", address);
  }

  balanceOf(_owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fetchCategories(): Array<Diamond__fetchCategoriesResultValue0Struct> {
    let result = super.call(
      "fetchCategories",
      "fetchCategories():((uint256,string,string,uint256,uint256,uint256,string[],address[],(string,address,uint256,uint256)[],uint256)[])",
      []
    );

    return result[0].toTupleArray<Diamond__fetchCategoriesResultValue0Struct>();
  }

  try_fetchCategories(): ethereum.CallResult<
    Array<Diamond__fetchCategoriesResultValue0Struct>
  > {
    let result = super.tryCall(
      "fetchCategories",
      "fetchCategories():((uint256,string,string,uint256,uint256,uint256,string[],address[],(string,address,uint256,uint256)[],uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Diamond__fetchCategoriesResultValue0Struct>()
    );
  }

  fetchCategory(hash: string): Diamond__fetchCategoryResultValue0Struct {
    let result = super.call(
      "fetchCategory",
      "fetchCategory(string):((uint256,string,string,uint256,uint256,uint256,string[],address[],(string,address,uint256,uint256)[],uint256))",
      [ethereum.Value.fromString(hash)]
    );

    return changetype<Diamond__fetchCategoryResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_fetchCategory(
    hash: string
  ): ethereum.CallResult<Diamond__fetchCategoryResultValue0Struct> {
    let result = super.tryCall(
      "fetchCategory",
      "fetchCategory(string):((uint256,string,string,uint256,uint256,uint256,string[],address[],(string,address,uint256,uint256)[],uint256))",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__fetchCategoryResultValue0Struct>(value[0].toTuple())
    );
  }

  fetchCategoryName(hash: string): string {
    let result = super.call(
      "fetchCategoryName",
      "fetchCategoryName(string):(string)",
      [ethereum.Value.fromString(hash)]
    );

    return result[0].toString();
  }

  try_fetchCategoryName(hash: string): ethereum.CallResult<string> {
    let result = super.tryCall(
      "fetchCategoryName",
      "fetchCategoryName(string):(string)",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  facetAddress(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): Array<Diamond__facetsResultFacets_Struct> {
    let result = super.call("facets", "facets():((address,bytes4[])[])", []);

    return result[0].toTupleArray<Diamond__facetsResultFacets_Struct>();
  }

  try_facets(): ethereum.CallResult<Array<Diamond__facetsResultFacets_Struct>> {
    let result = super.tryCall("facets", "facets():((address,bytes4[])[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Diamond__facetsResultFacets_Struct>()
    );
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  fetchInitReview(_hash: string): Diamond__fetchInitReviewResultValue0Struct {
    let result = super.call(
      "fetchInitReview",
      "fetchInitReview(string):((address,string,uint256,uint256,uint256,uint8,bool,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[]))",
      [ethereum.Value.fromString(_hash)]
    );

    return changetype<Diamond__fetchInitReviewResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_fetchInitReview(
    _hash: string
  ): ethereum.CallResult<Diamond__fetchInitReviewResultValue0Struct> {
    let result = super.tryCall(
      "fetchInitReview",
      "fetchInitReview(string):((address,string,uint256,uint256,uint256,uint8,bool,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[]))",
      [ethereum.Value.fromString(_hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__fetchInitReviewResultValue0Struct>(value[0].toTuple())
    );
  }

  fetchInitReviewByPoat(
    _hash: string
  ): Diamond__fetchInitReviewByPoatResultValue0Struct {
    let result = super.call(
      "fetchInitReviewByPoat",
      "fetchInitReviewByPoat(string):((address,string,uint256,uint256,uint256,uint8,bool,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[]))",
      [ethereum.Value.fromString(_hash)]
    );

    return changetype<Diamond__fetchInitReviewByPoatResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_fetchInitReviewByPoat(
    _hash: string
  ): ethereum.CallResult<Diamond__fetchInitReviewByPoatResultValue0Struct> {
    let result = super.tryCall(
      "fetchInitReviewByPoat",
      "fetchInitReviewByPoat(string):((address,string,uint256,uint256,uint256,uint8,bool,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[]))",
      [ethereum.Value.fromString(_hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__fetchInitReviewByPoatResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetchPost(hash: string): Diamond__fetchPostResultValue0Struct {
    let result = super.call(
      "fetchPost",
      "fetchPost(string):((uint256,string,string,string,(string,uint256)[],(uint256,string,uint256)[],(address,string,uint256)[],(address,string,uint256,uint256,bool,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[])[],bool,bool,address[],uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromString(hash)]
    );

    return changetype<Diamond__fetchPostResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_fetchPost(
    hash: string
  ): ethereum.CallResult<Diamond__fetchPostResultValue0Struct> {
    let result = super.tryCall(
      "fetchPost",
      "fetchPost(string):((uint256,string,string,string,(string,uint256)[],(uint256,string,uint256)[],(address,string,uint256)[],(address,string,uint256,uint256,bool,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[])[],bool,bool,address[],uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__fetchPostResultValue0Struct>(value[0].toTuple())
    );
  }

  fetchPostTitle(hash: string): string {
    let result = super.call(
      "fetchPostTitle",
      "fetchPostTitle(string):(string)",
      [ethereum.Value.fromString(hash)]
    );

    return result[0].toString();
  }

  try_fetchPostTitle(hash: string): ethereum.CallResult<string> {
    let result = super.tryCall(
      "fetchPostTitle",
      "fetchPostTitle(string):(string)",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  fetchPosts(): Array<Diamond__fetchPostsResultValue0Struct> {
    let result = super.call(
      "fetchPosts",
      "fetchPosts():((uint256,string,string,string,(string,uint256)[],(uint256,string,uint256)[],(address,string,uint256)[],(address,string,uint256,uint256,bool,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[])[],bool,bool,address[],uint256,uint256,uint256,uint256,uint256,uint256)[])",
      []
    );

    return result[0].toTupleArray<Diamond__fetchPostsResultValue0Struct>();
  }

  try_fetchPosts(): ethereum.CallResult<
    Array<Diamond__fetchPostsResultValue0Struct>
  > {
    let result = super.tryCall(
      "fetchPosts",
      "fetchPosts():((uint256,string,string,string,(string,uint256)[],(uint256,string,uint256)[],(address,string,uint256)[],(address,string,uint256,uint256,bool,uint256,(uint256,string,uint256)[],(string,uint256)[],(address,uint256)[])[],bool,bool,address[],uint256,uint256,uint256,uint256,uint256,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Diamond__fetchPostsResultValue0Struct>()
    );
  }

  mapStruct(_struct: i32): BigInt {
    let result = super.call("mapStruct", "mapStruct(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_struct))
    ]);

    return result[0].toBigInt();
  }

  try_mapStruct(_struct: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mapStruct", "mapStruct(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_struct))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  acceptBidsFraudProof(
    _user: Address,
    _reqId: BigInt,
    _addresses: Array<Address>,
    _partial: Diamond__acceptBidsFraudProofInput_partialStruct
  ): boolean {
    let result = super.call(
      "acceptBidsFraudProof",
      "acceptBidsFraudProof(address,uint256,address[],(address,uint256)):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddressArray(_addresses),
        ethereum.Value.fromTuple(_partial)
      ]
    );

    return result[0].toBoolean();
  }

  try_acceptBidsFraudProof(
    _user: Address,
    _reqId: BigInt,
    _addresses: Array<Address>,
    _partial: Diamond__acceptBidsFraudProofInput_partialStruct
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "acceptBidsFraudProof",
      "acceptBidsFraudProof(address,uint256,address[],(address,uint256)):(bool)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddressArray(_addresses),
        ethereum.Value.fromTuple(_partial)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  calculateLowestBids(_reqId: BigInt): Diamond__calculateLowestBidsResult {
    let result = super.call(
      "calculateLowestBids",
      "calculateLowestBids(uint256):(address[],(address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_reqId)]
    );

    return new Diamond__calculateLowestBidsResult(
      result[0].toAddressArray(),
      changetype<Diamond__calculateLowestBidsResultValue1Struct>(
        result[1].toTuple()
      )
    );
  }

  try_calculateLowestBids(
    _reqId: BigInt
  ): ethereum.CallResult<Diamond__calculateLowestBidsResult> {
    let result = super.tryCall(
      "calculateLowestBids",
      "calculateLowestBids(uint256):(address[],(address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_reqId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Diamond__calculateLowestBidsResult(
        value[0].toAddressArray(),
        changetype<Diamond__calculateLowestBidsResultValue1Struct>(
          value[1].toTuple()
        )
      )
    );
  }

  findBidder(
    _user: Address,
    _reqId: BigInt,
    _bidder: Address
  ): Diamond__findBidderResultValue0Struct {
    let result = super.call(
      "findBidder",
      "findBidder(address,uint256,address):((address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddress(_bidder)
      ]
    );

    return changetype<Diamond__findBidderResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_findBidder(
    _user: Address,
    _reqId: BigInt,
    _bidder: Address
  ): ethereum.CallResult<Diamond__findBidderResultValue0Struct> {
    let result = super.tryCall(
      "findBidder",
      "findBidder(address,uint256,address):((address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddress(_bidder)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__findBidderResultValue0Struct>(value[0].toTuple())
    );
  }

  getAcceptedBid(
    _user: Address,
    _reqId: BigInt,
    _bidder: Address
  ): Diamond__getAcceptedBidResultValue0Struct {
    let result = super.call(
      "getAcceptedBid",
      "getAcceptedBid(address,uint256,address):((address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddress(_bidder)
      ]
    );

    return changetype<Diamond__getAcceptedBidResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAcceptedBid(
    _user: Address,
    _reqId: BigInt,
    _bidder: Address
  ): ethereum.CallResult<Diamond__getAcceptedBidResultValue0Struct> {
    let result = super.tryCall(
      "getAcceptedBid",
      "getAcceptedBid(address,uint256,address):((address,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId),
        ethereum.Value.fromAddress(_bidder)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__getAcceptedBidResultValue0Struct>(value[0].toTuple())
    );
  }

  getAcceptedBids(_user: Address, _reqId: BigInt): Array<Address> {
    let result = super.call(
      "getAcceptedBids",
      "getAcceptedBids(address,uint256):(address[])",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getAcceptedBids(
    _user: Address,
    _reqId: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAcceptedBids",
      "getAcceptedBids(address,uint256):(address[])",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAllFundingReqs(
    _user: Address
  ): Array<Diamond__getAllFundingReqsResultValue0Struct> {
    let result = super.call(
      "getAllFundingReqs",
      "getAllFundingReqs(address):((uint256,uint256,uint256,uint8,uint256)[])",
      [ethereum.Value.fromAddress(_user)]
    );

    return result[0].toTupleArray<
      Diamond__getAllFundingReqsResultValue0Struct
    >();
  }

  try_getAllFundingReqs(
    _user: Address
  ): ethereum.CallResult<Array<Diamond__getAllFundingReqsResultValue0Struct>> {
    let result = super.tryCall(
      "getAllFundingReqs",
      "getAllFundingReqs(address):((uint256,uint256,uint256,uint8,uint256)[])",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Diamond__getAllFundingReqsResultValue0Struct>()
    );
  }

  getFundingReq(
    _user: Address,
    _reqId: BigInt
  ): Diamond__getFundingReqResultValue0Struct {
    let result = super.call(
      "getFundingReq",
      "getFundingReq(address,uint256):((uint256,uint256,uint256,uint8,uint256))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId)
      ]
    );

    return changetype<Diamond__getFundingReqResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getFundingReq(
    _user: Address,
    _reqId: BigInt
  ): ethereum.CallResult<Diamond__getFundingReqResultValue0Struct> {
    let result = super.tryCall(
      "getFundingReq",
      "getFundingReq(address,uint256):((uint256,uint256,uint256,uint8,uint256))",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_reqId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Diamond__getFundingReqResultValue0Struct>(value[0].toTuple())
    );
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class CreateCategoryCall extends ethereum.Call {
  get inputs(): CreateCategoryCall__Inputs {
    return new CreateCategoryCall__Inputs(this);
  }

  get outputs(): CreateCategoryCall__Outputs {
    return new CreateCategoryCall__Outputs(this);
  }
}

export class CreateCategoryCall__Inputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _hash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _percent(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _related(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get _time(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _subscribe(): boolean {
    return this._call.inputValues[5].value.toBoolean();
  }
}

export class CreateCategoryCall__Outputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _diamondCut(): Array<DiamondCutCall_diamondCutStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DiamondCutCall_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCall_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class CreateInitialReviewCall extends ethereum.Call {
  get inputs(): CreateInitialReviewCall__Inputs {
    return new CreateInitialReviewCall__Inputs(this);
  }

  get outputs(): CreateInitialReviewCall__Outputs {
    return new CreateInitialReviewCall__Outputs(this);
  }
}

export class CreateInitialReviewCall__Inputs {
  _call: CreateInitialReviewCall;

  constructor(call: CreateInitialReviewCall) {
    this._call = call;
  }

  get _postHash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _reviewHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _validatorTotalWeight(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _validatorCatWeight(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _reviewInfluence(): Array<CreateInitialReviewCall_reviewInfluenceStruct> {
    return this._call.inputValues[5].value.toTupleArray<
      CreateInitialReviewCall_reviewInfluenceStruct
    >();
  }

  get _reviewCat(): Array<CreateInitialReviewCall_reviewCatStruct> {
    return this._call.inputValues[6].value.toTupleArray<
      CreateInitialReviewCall_reviewCatStruct
    >();
  }

  get _reviewAuthor(): Array<CreateInitialReviewCall_reviewAuthorStruct> {
    return this._call.inputValues[7].value.toTupleArray<
      CreateInitialReviewCall_reviewAuthorStruct
    >();
  }
}

export class CreateInitialReviewCall__Outputs {
  _call: CreateInitialReviewCall;

  constructor(call: CreateInitialReviewCall) {
    this._call = call;
  }
}

export class CreateInitialReviewCall_reviewInfluenceStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get contentHash(): string {
    return this[1].toString();
  }

  get percentInfluence(): BigInt {
    return this[2].toBigInt();
  }
}

export class CreateInitialReviewCall_reviewCatStruct extends ethereum.Tuple {
  get catId(): string {
    return this[0].toString();
  }

  get impact(): BigInt {
    return this[1].toBigInt();
  }
}

export class CreateInitialReviewCall_reviewAuthorStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorWeight(): BigInt {
    return this[1].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class CreatePostCall extends ethereum.Call {
  get inputs(): CreatePostCall__Inputs {
    return new CreatePostCall__Inputs(this);
  }

  get outputs(): CreatePostCall__Outputs {
    return new CreatePostCall__Outputs(this);
  }
}

export class CreatePostCall__Inputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _hash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _authors(): Array<CreatePostCall_authorsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      CreatePostCall_authorsStruct
    >();
  }
}

export class CreatePostCall__Outputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }
}

export class CreatePostCall_authorsStruct extends ethereum.Tuple {
  get author(): Address {
    return this[0].toAddress();
  }

  get authorName(): string {
    return this[1].toString();
  }

  get authorWeight(): BigInt {
    return this[2].toBigInt();
  }
}

export class UpdateStructCall extends ethereum.Call {
  get inputs(): UpdateStructCall__Inputs {
    return new UpdateStructCall__Inputs(this);
  }

  get outputs(): UpdateStructCall__Outputs {
    return new UpdateStructCall__Outputs(this);
  }
}

export class UpdateStructCall__Inputs {
  _call: UpdateStructCall;

  constructor(call: UpdateStructCall) {
    this._call = call;
  }

  get _struct(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateStructCall__Outputs {
  _call: UpdateStructCall;

  constructor(call: UpdateStructCall) {
    this._call = call;
  }
}

export class AcceptBidsCall extends ethereum.Call {
  get inputs(): AcceptBidsCall__Inputs {
    return new AcceptBidsCall__Inputs(this);
  }

  get outputs(): AcceptBidsCall__Outputs {
    return new AcceptBidsCall__Outputs(this);
  }
}

export class AcceptBidsCall__Inputs {
  _call: AcceptBidsCall;

  constructor(call: AcceptBidsCall) {
    this._call = call;
  }

  get _reqId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _partial(): AcceptBidsCall_partialStruct {
    return changetype<AcceptBidsCall_partialStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class AcceptBidsCall__Outputs {
  _call: AcceptBidsCall;

  constructor(call: AcceptBidsCall) {
    this._call = call;
  }
}

export class AcceptBidsCall_partialStruct extends ethereum.Tuple {
  get bidder(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class BidFundingCall extends ethereum.Call {
  get inputs(): BidFundingCall__Inputs {
    return new BidFundingCall__Inputs(this);
  }

  get outputs(): BidFundingCall__Outputs {
    return new BidFundingCall__Outputs(this);
  }
}

export class BidFundingCall__Inputs {
  _call: BidFundingCall;

  constructor(call: BidFundingCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reqId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _percent(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BidFundingCall__Outputs {
  _call: BidFundingCall;

  constructor(call: BidFundingCall) {
    this._call = call;
  }
}

export class CancelBidCall extends ethereum.Call {
  get inputs(): CancelBidCall__Inputs {
    return new CancelBidCall__Inputs(this);
  }

  get outputs(): CancelBidCall__Outputs {
    return new CancelBidCall__Outputs(this);
  }
}

export class CancelBidCall__Inputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _reqId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _bidId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CancelBidCall__Outputs {
  _call: CancelBidCall;

  constructor(call: CancelBidCall) {
    this._call = call;
  }
}

export class RequestFundingCall extends ethereum.Call {
  get inputs(): RequestFundingCall__Inputs {
    return new RequestFundingCall__Inputs(this);
  }

  get outputs(): RequestFundingCall__Outputs {
    return new RequestFundingCall__Outputs(this);
  }
}

export class RequestFundingCall__Inputs {
  _call: RequestFundingCall;

  constructor(call: RequestFundingCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _percentReturn(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _reqType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class RequestFundingCall__Outputs {
  _call: RequestFundingCall;

  constructor(call: RequestFundingCall) {
    this._call = call;
  }
}

export class RequestReviewFundingCall extends ethereum.Call {
  get inputs(): RequestReviewFundingCall__Inputs {
    return new RequestReviewFundingCall__Inputs(this);
  }

  get outputs(): RequestReviewFundingCall__Outputs {
    return new RequestReviewFundingCall__Outputs(this);
  }
}

export class RequestReviewFundingCall__Inputs {
  _call: RequestReviewFundingCall;

  constructor(call: RequestReviewFundingCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _percent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _reqType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class RequestReviewFundingCall__Outputs {
  _call: RequestReviewFundingCall;

  constructor(call: RequestReviewFundingCall) {
    this._call = call;
  }
}

export class SaveCatPostCall extends ethereum.Call {
  get inputs(): SaveCatPostCall__Inputs {
    return new SaveCatPostCall__Inputs(this);
  }

  get outputs(): SaveCatPostCall__Outputs {
    return new SaveCatPostCall__Outputs(this);
  }
}

export class SaveCatPostCall__Inputs {
  _call: SaveCatPostCall;

  constructor(call: SaveCatPostCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _postHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _time(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _postCred(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _postCats(): Array<SaveCatPostCall_postCatsStruct> {
    return this._call.inputValues[4].value.toTupleArray<
      SaveCatPostCall_postCatsStruct
    >();
  }
}

export class SaveCatPostCall__Outputs {
  _call: SaveCatPostCall;

  constructor(call: SaveCatPostCall) {
    this._call = call;
  }
}

export class SaveCatPostCall_postCatsStruct extends ethereum.Tuple {
  get catHash(): string {
    return this[0].toString();
  }

  get catImpact(): BigInt {
    return this[1].toBigInt();
  }
}
